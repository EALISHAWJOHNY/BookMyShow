CREATE TABLE Movies (
    Id INT PRIMARY KEY IDENTITY,
    Title NVARCHAR(100) NOT NULL,
    Genre NVARCHAR(50),
    ReleaseDate DATE,
    Duration INT);
CREATE TABLE Users (
    Id INT PRIMARY KEY IDENTITY,
    UserName NVARCHAR(100) NOT NULL,
    Email NVARCHAR(100) NOT NULL,
    PasswordHash NVARCHAR(256) NOT NULL
);
 CREATE TABLE Bookings (
    Id INT PRIMARY KEY IDENTITY,
    UserId INT NOT NULL,
    ShowId INT NOT NULL,
    BookingDate DATETIME NOT NULL,
    TotalAmount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (UserId) REFERENCES Users(Id),
    FOREIGN KEY (ShowId) REFERENCES Shows(Id)
);
 CREATE TABLE Shows (
    Id INT PRIMARY KEY IDENTITY,
    MovieId INT NOT NULL,
    TheaterId INT NOT NULL,
    ShowTime DATETIME NOT NULL,
    Price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (MovieId) REFERENCES Movies(Id),
    FOREIGN KEY (TheaterId) REFERENCES Theaters(Id)
);
 CREATE TABLE Theaters (
    Id INT PRIMARY KEY IDENTITY,
    Name NVARCHAR(100) NOT NULL,
    Location NVARCHAR(200) NOT NULL
);
CREATE TABLE Seats (
    Id INT PRIMARY KEY IDENTITY,
    TheaterId INT NOT NULL,
    SeatNumber NVARCHAR(10) NOT NULL,
    Type NVARCHAR(50) NOT NULL,
    FOREIGN KEY (TheaterId) REFERENCES Theaters(Id)
);
-- Create Table Statement
CREATE TABLE ShowTimes (
    Id INT PRIMARY KEY IDENTITY,
    Time NVARCHAR(50) NOT NULL,
    TheatreId INT NOT NULL,
    MovieId INT NOT NULL,
    Name NVARCHAR(100) NOT NULL,
    FOREIGN KEY (TheatreId) REFERENCES Theaters(Id),
    FOREIGN KEY (MovieId) REFERENCES Movies(Id)
);

-- Insert Statements with Dummy Values
INSERT INTO ShowTimes (Time, TheatreId, MovieId, Name)
VALUES 
('19:00', 1, 1, 'Evening Show'),
('20:00', 2, 2, 'Night Show'),
('18:30', 3, 3, 'Matinee Show');

-- Movies Table
INSERT INTO Movies (Title, Genre, ReleaseDate, Duration)
VALUES 
('Inception', 'Sci-Fi', '2010-07-16', 148),
('The Godfather', 'Crime', '1972-03-24', 175),
('Pulp Fiction', 'Crime', '1994-10-14', 154);

-- Users Table
INSERT INTO Users (UserName, Email, PasswordHash)
VALUES 
('john_doe', 'john@example.com', 'e99a18c428cb38d5f260853678922e03'),
('jane_smith', 'jane@example.com', '2b22e2d68cf51d9bc1d178c3d24880c7'),
('alex_jones', 'alex@example.com', '3f27e2d68cf51d9bc1d178c3d24880c8');

-- Theaters Table
INSERT INTO Theaters (Name, Location)
VALUES 
('Regal Cinemas', '123 Main St, Springfield'),
('AMC Theatres', '456 Oak St, Metropolis'),
('Cineplex', '789 Pine St, Gotham');

-- Seats Table
INSERT INTO Seats (TheaterId, SeatNumber, Type)
VALUES 
(1, 'A1', 'Regular'),
(1, 'A2', 'Regular'),
(1, 'A3', 'Regular'),
(2, 'B1', 'VIP'),
(2, 'B2', 'VIP'),
(2, 'B3', 'VIP');

-- Shows Table
INSERT INTO Shows (MovieId, TheaterId, ShowTime, Price)
VALUES 
(1, 1, '2024-07-01 19:00:00', 12.50),
(2, 2, '2024-07-02 20:00:00', 15.00),
(3, 3, '2024-07-03 18:30:00', 10.00);

-- Bookings Table
INSERT INTO Bookings (UserId, ShowId, BookingDate, TotalAmount)
VALUES 
(1, 1, '2024-06-20 10:00:00', 12.50),
(2, 2, '2024-06-20 11:00:00', 15.00),
(3, 3, '2024-06-20 12:00:00', 10.00);

CREATE PROCEDURE spc_insertMovie
    @Name NVARCHAR(255),
    @ImdbRating FLOAT,
    @Category NVARCHAR(255),
    @Genre NVARCHAR(255),
    @ReleaseDate DATE,
    @Duration INT,
    @ThemePhotoPath NVARCHAR(255),
    @Result INT OUTPUT
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        -- Insert the movie details into the Movies table
        INSERT INTO Movies (Name, ImdbRating, Category, Genre, ReleaseDate, Duration, ThemePhotoPath)
        VALUES (@Name, @ImdbRating, @Category, @Genre, @ReleaseDate, @Duration, @ThemePhotoPath);
        
        -- Set the output parameter to indicate success (e.g., 1)
        SET @Result = 1;
    END TRY
    BEGIN CATCH
        -- Handle any errors that occur during the insertion
        -- Set the output parameter to indicate failure (e.g., 0)
        SET @Result = 0;

        -- Optionally, log the error details or re-throw the error
        -- Example: RAISERROR('Error inserting movie', 16, 1);
    END CATCH;
END
